from datetime import datetime

from pydantic import (
    BaseModel, 
    field_validator
)

from py4lexis.core.base.common import get_time


__all__ = ["Tokens"]

class Tokens(BaseModel):
    """
        Class that holds user tokens.
    """
    username: str
    access_token: str
    expires_in: int    
    refresh_token: str
    refresh_expires_in: int
    token_retrieved_at: float = get_time(datetime.now())

    @field_validator("expires_in", mode="after")
    def transform_access_expire(cls, raw: int) -> int:
        return raw - 30 if raw > 30 else raw  # 30 sec offset
    
    @field_validator("refresh_expires_in", mode="after")
    def transform_refresh_expire(cls, raw: int) -> int:
        return raw - 30 if raw > 30 else raw # 30 sec offset