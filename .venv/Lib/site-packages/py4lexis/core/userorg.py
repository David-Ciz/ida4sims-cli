from py4lexis.core.helper import (
    Clr, 
    _usrorg,
)
from py4lexis.core.session import (
    LexisSession,
    LexisSessionOffline,
    LexisSessionCredentials,
    LexisSessionURL
)


def get_zone_by_location(session: LexisSession | LexisSessionURL | LexisSessionCredentials | LexisSessionOffline,
                         project: str,
                         location: str) -> str | None:
    """
        Returns iRODS zone by iRODS storage location name.

        Parameters
        ----------
        session : LexisSession
            Lexis Session.
        project : str
            Project's short name.
        location : str
            iRODS location name.

        Returns
        -------
        str | None
            Returns iRODS zone name within valid LEXIS project.

    """
    
    _Clr: Clr = Clr()
    url: str = session.userorg_path + f"ProjectResource?ProjectShortName={project}"
    headers: dict[str, str] = {
        "accept": "application/json",
        "X-Api-Token": session._tokens.access_token
    }
    
    content: dict = session.make_request(method="get",
                                         url=url,
                                         headers=headers,
                                         to_json=True)
    
    zone: str | None = None
    for resource in content:
        for assignment in resource["Assignments"]:
            for specification in assignment["Specifications"]:
                if specification["Key"] == "ZONE_NAME" and location == assignment["LocationName"]:
                    zone = specification["Value"]
                    return zone
                
    return zone

def get_location_and_resource_by_zone(session: LexisSession | LexisSessionURL | LexisSessionCredentials | LexisSessionOffline,
                                      project: str,
                                      zone: str) -> tuple[str, str] | tuple[None, None]:
    """
        Returns iRODS storage location name and iRODS storage resource by iRODS zone.

        Parameters
        ----------
        session : LexisSession
            Lexis Session.
        project : str
            Project's short name.
        zone : str
            iRODS zone name.

        Returns
        -------
        tuple[str, str] | tuple[None, None]
            Returns iRODS storage location name and iRODS storage resource within valid LEXIS project.
    """
    
    _Clr: Clr = Clr()
    url: str = session.userorg_path + f"Project/ExtendedProjectInfo?ProjectShortName={project}"
    headers: dict[str, str] = {
        "accept": "application/json",
        "X-Api-Token": session._tokens.access_token
    }
    
    content: dict = session.make_request(method="get",
                                         url=url,
                                         headers=headers,
                                         to_json=True)
    
    # select the first occurence
    # TODO: MAKE MULTIPLE SELECTION
    storage_name: str | None = None
    storage_resource: str | None = None
    for resource in content["AssignedProjectResources"]:
        for specification in resource["Specifications"]:
            if specification["Key"] == "ZONE_NAME" and zone == specification["Value"]:
                storage_resource = resource["ProjectResourceName"]
                storage_name = resource["LocationName"]
                
                return storage_name, storage_resource                
    
    return storage_name, storage_resource