import os
import sys

from pathlib import Path


def pure_path(input_path: str | None) -> str:
    """
        Makes "pure" (not absolute nor relative) path within local machine from input path.

        Parameters
        ----------
        input_path : str
            Relative (absolute) path in local machine.

        Returns
        -------
        str
            "Pure" path within local machine
    """

    if input_path is None:
        return ""
    
    output_path: str = input_path.replace('\\', '/')
    output_path = output_path.replace(".", "", 1) if len(output_path) > 0 and output_path[0] == "." else output_path
    output_path = output_path.replace("/", "", 1) if len(output_path) > 0 and output_path[0] == "/" else output_path
    output_path = output_path[:-1] if len(output_path) > 0 and output_path[-1] == "/" else output_path

    return output_path


def create_path(input_path: str, is_dir: bool=False) -> str:
    """
        Creates path within local machine from input path.

        Parameters
        ----------
        input_path : str
            Relative (absolute) path in local machine.

        Returns
        -------
        str
            Absolute path within local machine
    """
    output_path: str = make_abs_path(input_path)

    file: str | None = None
    suffix: str = Path(output_path).suffix
    if suffix != "":
        file: str = output_path.split("/")[-1]
        output_path = output_path.replace(file, "")
        
    tmp_paths: list[str] = output_path.split("/")
    if not is_dir:
        del tmp_paths[-1]

    if tmp_paths[0] == "":
        del tmp_paths[0]

    tmp_path: str = ""         
    for path_i in tmp_paths:
        if sys.platform != "win32":
            tmp_path += f"/{path_i}"
        else:
            tmp_path += f"{path_i}/"

        if not os.path.exists(tmp_path):
            os.mkdir(tmp_path)

    if file is not None:
        output_path = output_path + file

    return output_path


def make_abs_path(input_path: str) -> str:
    """
        Makes absolute path within local machine from input path.

        Parameters
        ----------
        input_path : str
            Relative (absolute) path in local machine.

        Returns
        -------
        str
            Absolute path within local machine
    """
    output_path = input_path.replace("\\", "/")  # to eliminate mess
    output_path = os.path.abspath(output_path)
    output_path = output_path.replace("\\", "/")  # due to win32 abs path
    return output_path


def make_tus_path(file_path: str, filename: str):
    if file_path is None:
        file_path = "./"

    file_path = make_abs_path(file_path)
    
    if filename[1] == ".":
        filename = filename.replace(".", "", 1)

    filename = filename.replace("\\", "/")
    if filename[1] == "/":
        filename = filename.replace("/", "", 1)

    if file_path[-1] != "/":
        file_path = f"{file_path}/{filename}"
    else:
        file_path = f"{file_path}{filename}"

    return file_path